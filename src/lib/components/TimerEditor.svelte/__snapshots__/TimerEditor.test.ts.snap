// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`ParticipantBadge snapshot > Should match snapshot 1`] = `
{
  "component": TimerEditor {
    "$$": {
      "after_update": [],
      "before_update": [],
      "bound": {},
      "callbacks": {},
      "context": Map {},
      "ctx": [
        10,
        [Function],
        [Function],
        [Function],
      ],
      "dirty": [
        -1,
      ],
      "fragment": {
        "c": [Function],
        "d": [Function],
        "i": [Function],
        "l": [Function],
        "m": [Function],
        "o": [Function],
        "p": [Function],
      },
      "not_equal": [Function],
      "on_destroy": [
        [Function],
      ],
      "on_disconnect": [],
      "on_mount": [],
      "props": {},
      "root": <div>
        <div
          class="container mt-2"
        >
          <span
            class="mr-12"
          >
            Timer:
          </span>
           
          <div
            class="join"
          >
            <button
              class="btn btn-xs no-animation btn-primary text-white join-item rounded-l-full"
            >
              -
            </button>
             
            <input
              class="w-12 bg-transparent join-item text-center outline-primary svelte-14nvfch"
              data-testid="timerBox"
              type="number"
            />
             
            <button
              class="btn btn-xs no-animation btn-primary text-white join-item rounded-r-full"
            >
              +
            </button>
          </div>
           
          <span
            class="ml-2"
          >
            Minutes
          </span>
        </div>
      </div>,
      "skip_bound": false,
      "update": [Function],
    },
    "$$events_def": undefined,
    "$$prop_def": undefined,
    "$$set": undefined,
    "$$slot_def": undefined,
    "$capture_state": [Function],
    "$inject_state": [Function],
  },
  "container": <body>
    <div>
      <div
        class="container mt-2"
      >
        <span
          class="mr-12"
        >
          Timer:
        </span>
         
        <div
          class="join"
        >
          <button
            class="btn btn-xs no-animation btn-primary text-white join-item rounded-l-full"
          >
            -
          </button>
           
          <input
            class="w-12 bg-transparent join-item text-center outline-primary svelte-14nvfch"
            data-testid="timerBox"
            type="number"
          />
           
          <button
            class="btn btn-xs no-animation btn-primary text-white join-item rounded-r-full"
          >
            +
          </button>
        </div>
         
        <span
          class="ml-2"
        >
          Minutes
        </span>
      </div>
    </div>
  </body>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
